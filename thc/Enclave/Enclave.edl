enclave {
    from "Sealing/Sealing.edl" import *;
    /*from "sgx_tkey_exchange.edl" import *;*/
    include "sgx_uae_service.h"

    trusted {
        /* define ECALLs here. */
        
        public sgx_status_t skg_init(
            [out, size=sealed_size]sgx_sealed_data_t* sealed_data, size_t sealed_size, 
            [out, size=pk_size]sgx_ec256_public_t* pk,size_t pk_size,
            [in]sgx_target_info_t* target_info, 
            [out]sgx_report_t* p_report);
        
        public sgx_status_t bb_init_1(
            [out, size=sealed_size]sgx_sealed_data_t* sealed_data, size_t sealed_size, 
            [out, size=pk_size]sgx_ec256_public_t* bb_pk,
            [in, size=pk_size]sgx_ec256_public_t* skg_pk, size_t pk_size, 
            [in]sgx_target_info_t* target_info, 
            [out]sgx_report_t* p_report);
        
        public sgx_status_t skg_exec(
            [in, size=pk_size]sgx_ec256_public_t* p_bb_pk, 
            [in, size=pk_size]sgx_ec256_public_t* p_skg_pk, size_t pk_size,
            [in, size=sealed_size]sgx_sealed_data_t* p_sealed_s_sk, size_t sealed_size, 
            [out, size=s_encrypted_size]uint8_t* s_encrypted, size_t s_encrypted_size);
        
        public sgx_status_t bb_init_2(
            [in, size=sealed_size]sgx_sealed_data_t* p_sealed_k,
            [in, size=s_encrypted_size] uint8_t* s_encrypted, size_t s_encrypted_size, 
            [out, size=sealed_size]sgx_sealed_data_t* p_sealed_s, size_t sealed_size);
        
        
        public sgx_status_t bb_exec(
            [in, size=sealed_size]sgx_sealed_data_t* p_sealed_s, size_t sealed_size,
            [in, size=B_in_size]uint8_t* B_in, size_t B_in_size,
            [out, size=B_out_size] uint8_t* B_out, size_t B_out_size);

    };

    untrusted {
        /* define OCALLs here. */
        void ocall_print([in, string]const char* str);
    };
};
